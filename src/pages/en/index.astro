---
import "../index.scss";
import BaseLayout from "../../layouts/BaseLayout.astro";
import retrato from "../../assets/retrato_blu.png";
import Button from "../../components/button.astro";
import Send from "@lucide/astro/icons/send";
import Languages from "@lucide/astro/icons/languages";
import { getRelativeLocaleUrl } from "astro:i18n";

const Year = new Date().getFullYear();
---

<BaseLayout title="My Portfolio">
	<nav class="c-nav">
		<Languages />
		Available in other languages:
		<ul class="c-nav__list">
			<li class="c-nav__item">
				<a
					href={getRelativeLocaleUrl("es", "/")}
					class="c-nav__item-link">Esp</a
				>
			</li>
			<li class="c-nav__item">
				<a href="#" class="c-nav__item-link">Eng</a>
			</li>
			<li class="c-nav__item">
				<a
					href={getRelativeLocaleUrl("it", "/")}
					class="c-nav__item-link">Ita</a
				>
			</li>
		</ul>
	</nav>
	<div class="parallax"></div>
	<main>
		<section class="c-header">
			<h1>Tomás Cabrer<span class="c-caret__effect">a</span></h1>
			<p class="c-header__subtitle">UX/UI & Web Developer</p>
		</section>
		<section class="c-section" id="sobre-mi">
			<h2 class="c-section__title">Who am I?</h2>
			<div class="c-section__body">
				I'm an IT professional with UX and web development experience.
				I'm able to cover the entire lifecycle of design, from research
				and prototyping (with Figma, Adobe XD) to implementation with
				HTML, SCSS and JavaScript. I outperform in collaboration skills,
				as demonstrated while I was working on massive team projects for
				health insurance services in Puerto Rico.
			</div>
			<img
				src={retrato.src}
				alt="Foto de Tomás Cabrera"
				id="retrato-me"
			/>
		</section>
		<section class="c-section" id="servicios">
			<h2 class="c-section__title">What are my services?</h2>
			<div class="c-section__body">
				As a UX/UI Designer, I offer services from the user
				investigation, wireframing and prototyping, and interfaces
				design, seeking for an optimal user experience. In web
				development, having the knowledge to create front-end
				applications with Angular, HTML, SCSS, JavaScript and jQuery,
				providing functional solutions.
			</div>
		</section>
		<div class="c-call_action">
			<p>
				Your ideal project is in <span>a click</span>
			</p>
			<Button
				className="c-button is-primary"
				onClick="document.getElementById('contacto')?.scrollIntoView({ behavior: 'smooth' })"
				text="Contact me now!"
			>
				<Send />
			</Button>
		</div>
		<section class="c-section" id="experiencia">
			<h2 class="c-section__title">My experience</h2>
			<div class="c-section__body">
				<p>
					Having a well found trajectory in development front-end, I am
					proficient in technologies such as Angular and JavaScript.
					In addition, I integrate skills in graphic design, UX and
					design web, using tools from the Adobe suite and Figma. My
					focus is on continuous improvement and expansion of my
					knowledge in the development area.
				</p>
			</div>
		</section>
		<section class="c-section" id="contacto">
			<h2 class="c-section__title">Contact me!</h2>
			<div class="c-section__body">
				<p>
					You can find me through LinkedIn clicking
					<a
						href="https://www.linkedin.com/in/tom%C3%A1s-cabrera/"
						target="_blank">here</a
					>, sending me an email to <a
						href="mailto:e.tomas.cabrera@gmail.com"
						>e.tomas.cabrera@gmail.com</a
					>
					or compiling the following form and we will be on touch soon!
				</p>
				<form method="post" id="contact-form">
					<div class="c-form__group">
						<label for="nombre"
							>Name <span class="is-required">*</span></label
						>
						<input type="text" id="nombre" name="nombre" required />
						<span class="c-input__helper-text"></span>
					</div>
					<div class="c-form__group">
						<label for="email"
							>Email <span class="is-required">*</span></label
						>
						<input type="email" id="email" name="email" required />
						<span class="c-input__helper-text"></span>
					</div>
					<div class="c-form__group">
						<label for="telefono"
							>Phone <span class="is-required">*</span></label
						>
						<input
							type="tel"
							id="telefono"
							name="telefono"
							required
						/>
						<span class="c-input__helper-text"></span>
					</div>
					<div class="c-form__group">
						<label for="mensaje"
							>Message <span class="is-required">*</span></label
						>
						<textarea id="mensaje" name="mensaje" required
						></textarea>
						<span class="c-input__helper-text"></span>
					</div>
					<Button
						className="is-primary"
						type="submit"
						text="Send message"
						id="submit-form"
					>
						<Send />
					</Button>
					<p id="mensaje-respuesta" hidden></p>
				</form>
			</div>
		</section>
	</main>
	<footer class="c-footer">
		{Year}, Tomás Cabrera. All rights reserved.
	</footer>
</BaseLayout>

<script>
	document.addEventListener("DOMContentLoaded", () => {
		// Add 'loaded' class to body to trigger its fade-in animation
		document.body.classList.add("loaded");

		const sections = document.querySelectorAll(".c-section");
		const observerOptions = {
			root: null,
			rootMargin: "0px",
			threshold: 0.1, // Adjust threshold as needed, 0.1 means 10% of the element is visible
		};

		const observer = new IntersectionObserver((entries) => {
			entries.forEach((entry) => {
				const target = entry.target;
				if (entry.isIntersecting) {
					// console.log("Intersecting, making visible:", target.id || target.className);
					target.classList.add("is-visible");
					target.classList.remove("is-hidden-up");
				} else {
					// Not intersecting
					// console.log("Not intersecting:", target.id || target.className, "Bottom:", entry.boundingClientRect.bottom, "Top:", entry.boundingClientRect.top);
					target.classList.remove("is-visible");
					// Check if the element is now above the viewport
					if (entry.boundingClientRect.bottom < 0) {
						// console.log("Element above viewport, adding is-hidden-up:", target.id || target.className);
						target.classList.add("is-hidden-up");
					} else {
						// Element is below the viewport or in a state where it's not "hidden-up"
						// console.log("Element not above (likely below), removing is-hidden-up:", target.id || target.className);
						target.classList.remove("is-hidden-up");
					}
				}
			});
		}, observerOptions);

		sections.forEach((section) => {
			observer.observe(section);
		});

		// Validation
		const runValidations = () => {
			let isValid = true;
			// Explicitly type the form elements
			const nombreInput = document.getElementById(
				"nombre",
			) as HTMLInputElement;
			const emailInput = document.getElementById(
				"email",
			) as HTMLInputElement;
			const telefonoInput = document.getElementById(
				"telefono",
			) as HTMLInputElement;
			const mensajeInput = document.getElementById(
				"mensaje",
			) as HTMLTextAreaElement;

			const nombreHelper = document.getElementById("nombre")
				?.nextElementSibling as HTMLElement;
			const emailHelper = document.getElementById("email")
				?.nextElementSibling as HTMLElement;
			const telefonoHelper = document.getElementById("telefono")
				?.nextElementSibling as HTMLElement;
			const mensajeHelper = document.getElementById("mensaje")
				?.nextElementSibling as HTMLElement;

			const sendButton = document.getElementById(
				"submit-form",
			) as HTMLButtonElement;
			console.log(sendButton);

			// Reset previous invalid states
			nombreInput.classList.remove("is-invalid");
			emailInput.classList.remove("is-invalid");
			telefonoInput.classList.remove("is-invalid");
			mensajeInput.classList.remove("is-invalid");
			nombreHelper.innerHTML = "";
			emailHelper.innerHTML = "";
			telefonoHelper.innerHTML = "";
			mensajeHelper.innerHTML = "";

			// Get current values directly for validation
			const data = {
				nombre: nombreInput.value,
				email: emailInput.value,
				telefono: telefonoInput.value,
				mensaje: mensajeInput.value,
			};

			if (!data.nombre) {
				nombreInput.classList.add("is-invalid");
				nombreHelper.innerHTML = "This field is required";
				isValid = false;
			}

			if (!data.email || !/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(data.email)) {
				emailInput.classList.add("is-invalid");
				emailHelper.innerHTML = "Invalid email format";
				isValid = false;
			}

			if (!data.telefono) {
				telefonoInput.classList.add("is-invalid");
				telefonoHelper.innerHTML = "This field is required";
				isValid = false;
			}

			if (!data.mensaje) {
				mensajeInput.classList.add("is-invalid");
				mensajeHelper.innerHTML = "This field is required";
				isValid = false;
			}

			if (!isValid) {
				console.log("Form validation failed");
				return false; // Indicate validation failure
			}
			return true; // Indicate validation success
		};

		// Debounce function
		let debounceTimer: number;
		const debouncedValidate = () => {
			clearTimeout(debounceTimer);
			debounceTimer = window.setTimeout(() => {
				runValidations();
			}, 500);
		};

		const form = document.getElementById("contact-form") as HTMLFormElement;
		const formInputs = form.querySelectorAll("input, textarea");

		formInputs.forEach((input) => {
			input.addEventListener("keyup", debouncedValidate);
		});

		form?.addEventListener("submit", (event) => {
			event.preventDefault(); // Prevents page reload

			if (!runValidations()) {
				return; // Stop submission if validation fails
			}

			const formData = new FormData(form);
			const data: { [key: string]: any } = {};
			for (const [key, value] of formData.entries()) {
				data[key] = value;
			}

			let mensaje = null;

			fetch(
				"https://formsubmit.co/ajax/a0e7f1761136a918757612b9a39ef47d",
				{
					method: "POST",
					headers: {
						"Content-Type": "application/json",
						Accept: "application/json",
					},
					body: JSON.stringify(data),
				},
			)
				.then((response) => {
					if (response.ok) {
						mensaje =
							"Thank you for your message, soon I'll be answering! Meanwhile you can visit me on LinkedIn clicking <a href='https://www.linkedin.com/in/tom%C3%A1s-cabrera/'>here.</a>";
						form.reset();
					} else {
						mensaje =
							"An error have occurred while trying to send the form. Please try again later.";
					}
					document
						.getElementById("mensaje-respuesta")
						?.removeAttribute("hidden");
					document.getElementById("mensaje-respuesta")!.innerHTML =
						mensaje;
					return response.json();
				})
				.then((data) => console.log(data))
				.catch((error) => console.log(error));
		});
	});
</script>
